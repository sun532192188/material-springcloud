spring: 
   datasource:
    type: org.apache.commons.dbcp2.BasicDataSource
    #数据源配置 
    url: jdbc:mysql://localhost:3306/material?useUnicode=true&characterEncoding=utf-8   
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    #连接池配置   
    jpa:   #指定数据库
     database: MYSQL
     show-sql: true  #是否打印sq
     properties: 
       hibernate:
        current_session_context_class: org.springframework.orm.hibernate4.SpringSessionContext
     hibernate:
       #create：表示启动的时候先drop，再create
       #create-drop: 也表示创建，只不过再系统关闭前执行一下drop
       #update: 这个操作启动的时候会去检查schema是否一致，如果不一致会做scheme更新
       #validate: 启动时验证现有schema与你配置的hibernate是否一致，如果不一致就抛出异常，并不做更新
       ddl-auto: update
       naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy   #命名策略
       properties.hibernate.dialect : org.hibernate.dialect.MySQLDialect   #允许Hibernate针对特定的关系数据库生成优化的SQL
   
   #配置文件上传
   http: 
    multipart:
      max-file-size: 2000Mb  #max file size 默认 1M 
      max-request-size: 2500Mb  #max request size 默认10m

encrypt:
   failOnError: true   #遇到错误继续
    
logging:               #配置日志
  level:
    root: info
    org.hibernate: info
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
 #   com.material.website: DEBUGGER
